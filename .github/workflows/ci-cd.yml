name: build push and deploy image

on: # trigger
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  id-token: write   # Required for OIDC
  contents: read    # For actions/checkout
env:
  AWS_REGION: us-east-1
  AWS_ROLE: ${{secrets.AWS_ACTION_ROLE}}
  ECR_REPO_NAME: dev-13
  IMAGE_TAG: ${{github.run_number}}


jobs:
  build:
    runs-on: ubuntu-latest # github runner
    steps:
      - name: clone repo
        uses: actions/checkout@v3
      - name: Aws creds config
        uses: aws-actions/configure-aws-credentials@v4 # an action is a prebuild code
        with: # take some input
          role-to-assume: ${{env.AWS_ROLE}} # open ID connect (oidc)
          aws-region: ${{env.AWS_REGION}}
      - name: loging to ecr
        uses: aws-actions/amazon-ecr-login@v1
        id: ecr-login
      - name: Build and tag image
        id: build-and-push
        run: | 
             docker build -t ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME}}:${{env.IMAGE_TAG}} .
             
      - name: Scan docker Image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME}}:${{env.IMAGE_TAG}}" # Scan
          format: "table"
          exit-code: "1"  # Fail the build if vulnerabilities found
          severity: "CRITICAL,HIGH"
      - name: Push image to ecr
        run: | 
             docker push ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPO_NAME}}:${{env.IMAGE_TAG}}

